"""authors_db

Revision ID: ba6dec9a437c
Revises: 
Create Date: 2025-03-03 16:13:14.228109

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ba6dec9a437c'
down_revision = None
branch_labels = None
depends_on = None


from sqlalchemy import inspect

def upgrade():
    bind = op.get_bind()
    inspector = inspect(bind)

    # Check if 'authors' table exists
    if 'authors' not in inspector.get_table_names():
        op.create_table(
            'authors',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('first_name', sa.String(20)),
            sa.Column('last_name', sa.String(20)),
            sa.Column('contact', sa.Integer(), nullable=False),
            sa.Column('email', sa.String(30), nullable=False),
            sa.Column('password', sa.String(15), nullable=False),
            sa.Column('image', sa.String(100)),
            sa.Column('bio', sa.String(200)),
            sa.Column('type', sa.String(255), nullable=False),
            sa.Column('created_at', sa.String(50)),
            sa.Column('time_stamp', sa.DateTime),
            sa.Column('updated_at', sa.DateTime),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint('contact'),
            sa.UniqueConstraint('email')
        )

    if 'companies' not in inspector.get_table_names():
        op.create_table(
            'companies',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('name', sa.String(100), nullable=False),
            sa.Column('origin', sa.String(100), nullable=False),
            sa.Column('description', sa.Text(), nullable=False),
            sa.Column('author_id', sa.Integer()),
            sa.Column('time_stamp', sa.DateTime),
            sa.Column('updated_at', sa.DateTime),
            sa.PrimaryKeyConstraint('id'),
            sa.ForeignKeyConstraint(['author_id'], ['authors.id']),
            sa.UniqueConstraint('name')
        )
        
        
    op.create_table('books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=120), nullable=False),
    sa.Column('pages', sa.Integer(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('price_unit', sa.String(length=35), nullable=False),
    sa.Column('publication_date', sa.Date(), nullable=False),
    sa.Column('isbn', sa.String(length=30), nullable=True),
    sa.Column('genre', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=220), nullable=False),
    sa.Column('image', sa.String(length=120), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('time_stamp', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('isbn')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('books')
    op.drop_table('companies')
    op.drop_table('authors')
    # ### end Alembic commands ###
